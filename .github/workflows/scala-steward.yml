name: Run Scala Steward on the managed repositories

on:
  workflow_dispatch:
    inputs:
      repository:
        description: "Repository to update. Leave empty to update every repository managed by the GitHub App."
        required: false
        default: ""
  schedule:
    - cron: "0 5 1,15 * *"

jobs:
  get-repositories:
    name: Select repositories to update
    runs-on: ubuntu-latest
    outputs:
      repositories: ${{ steps.repositories.outputs.repositories }}
    steps:
      - name: Generate token
        id: github_app
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92 # v1.8.0
        with:
          app_id: ${{ secrets.APP_ID }}
          installation_id: ${{ secrets.APP_INSTALLATION_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Select repositories to update
        id: repositories
        run: |
          if [ "${{ github.event.inputs.repository }}" != "" ]; then
            echo "repositories=[\"alejandrohdezma/${{ github.event.inputs.repository }}\"]" >> $GITHUB_OUTPUT
          else
            echo "repositories=$(gh api installation/repositories -q '.repositories | map(.full_name)')" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ steps.github_app.outputs.token }}

  run-scala-steward-single-repository:
    name: ${{ matrix.repo }} - Dependency update
    runs-on: ubuntu-latest
    needs: get-repositories
    strategy:
      fail-fast: false
      matrix:
        repo: ${{ fromJson(needs.get-repositories.outputs.repositories) }}
    steps:
      - name: Checkout project
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Launch Scala Steward on ${{ matrix.repo }}
        uses: scala-steward-org/scala-steward-action@72342774b0ce49cb83ebceff2a45066ecf7305e3 # v2.47.0
        with:
          github-repository: ${{ matrix.repo }}
          github-app-auth-only: "true"
          github-app-id: ${{ secrets.APP_ID }}
          github-app-installation-id: ${{ secrets.APP_INSTALLATION_ID }}
          github-app-key: ${{ secrets.APP_PRIVATE_KEY }}
